{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github Repositories\\\\cyclex\\\\frontend\\\\src\\\\components\\\\forms\\\\RegistrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Stack, TextField, Button, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\"; //router-dom\n\nimport { Link, useNavigate, useLocation } from \"react-router-dom\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { register } from \"../../../src/actions/userActions\"; //components\n\nimport Message from \"../Message\";\nimport Form from \"../Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  noneTextDecoration: {\n    color: theme.palette.secondary.light,\n    textDecoration: \"none\"\n  }\n}));\nexport default function RegistrationForm() {\n  _s();\n\n  const classes = useStyles();\n  const history = useNavigate();\n  const location = useLocation();\n  const [name, setName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  let {\n    isLoading,\n    error,\n    userInfo\n  } = userRegister; //redirect to homepage\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    console.log(name);\n\n    if (!email.match(mailFormat)) {\n      setMessage(\"Email is invalid\");\n    } else {\n      dispatch(register(name, email, password));\n      setMessage(false);\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history(redirect);\n    }\n\n    ;\n  }, [history, userInfo, redirect]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      isLoading: isLoading,\n      error: error,\n      children: message ? /*#__PURE__*/_jsxDEV(Message, {\n        severity: \"error\",\n        form: true,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/img/CycleX-Logo.png\",\n        width: \"150px\",\n        style: {\n          margin: \"auto\",\n          display: \"block\"\n        },\n        alt: \"CycleX Logo\",\n        title: \"CycleX - Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      textAlign: \"center\",\n      sx: {\n        padding: \"30px 0px\"\n      },\n      children: \"GETTING STARTED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: event => handleSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"NAME\",\n          id: \"name\",\n          required: true,\n          variant: \"outlined\",\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"EMAIL\",\n          id: \"email\",\n          required: true,\n          variant: \"outlined\",\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"PASSWORD\",\n          required: true,\n          type: \"password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"CONFIRM PASSWORD\",\n          required: true,\n          type: \"password\",\n          onChange: event => setConfirmPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          margin: \"20px 0\"\n        },\n        direction: {\n          xs: \"column\",\n          sm: \"row\"\n        },\n        spacing: {\n          xs: 1,\n          sm: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/signin?redirect=${redirect}` : \"/signin\",\n            className: classes.noneTextDecoration,\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegistrationForm, \"Clx7CY4XUXrwZ4YdlnkvaHSUCUg=\", false, function () {\n  return [useStyles, useNavigate, useLocation, useDispatch, useSelector];\n});\n\n_c = RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["C:/Github Repositories/cyclex/frontend/src/components/forms/RegistrationForm.js"],"names":["React","useEffect","useState","Typography","Stack","TextField","Button","Box","makeStyles","Link","useNavigate","useLocation","useSelector","useDispatch","register","Message","Form","useStyles","theme","noneTextDecoration","color","palette","secondary","light","textDecoration","RegistrationForm","classes","history","location","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","isLoading","error","userInfo","redirect","search","split","handleSubmit","event","preventDefault","mailFormat","console","log","match","margin","display","padding","target","value","xs","sm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Stack, TextField, Button, Box } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n//router-dom\r\nimport {Link, useNavigate, useLocation} from \"react-router-dom\";\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../../../src/actions/userActions\";\r\n\r\n//components\r\nimport Message from \"../Message\";\r\nimport Form from \"../Form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    noneTextDecoration: {\r\n        color: theme.palette.secondary.light,\r\n        textDecoration: \"none\"\r\n    }\r\n}));\r\n\r\nexport default function RegistrationForm() {\r\n    const classes = useStyles();\r\n    const history = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [name, setName] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [confirmPassword, setConfirmPassword] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    let { isLoading, error, userInfo } = userRegister;\r\n\r\n    //redirect to homepage\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        var mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        console.log(name);\r\n\r\n        \r\n        if (!email.match(mailFormat)){\r\n            setMessage(\"Email is invalid\");\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n            setMessage(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history(redirect);\r\n        };\r\n    }, [history, userInfo, redirect]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <Form isLoading={isLoading} error={error}>\r\n            {message ? <Message severity=\"error\" form={true}>{ message }</Message> : null }\r\n        </Form>\r\n        <Link to=\"/\">\r\n        <img src=\"/assets/img/CycleX-Logo.png\" width=\"150px\" style={{margin: \"auto\", display:\"block\"}} alt=\"CycleX Logo\" title=\"CycleX - Home\"/>\r\n        </Link>\r\n        <Typography variant=\"h3\" textAlign=\"center\" sx={{padding: \"30px 0px\"}}>\r\n            GETTING STARTED\r\n        </Typography>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\" onSubmit={(event) => handleSubmit(event)}>\r\n            <Stack spacing={2}>\r\n                <TextField fullWidth label=\"NAME\" id=\"name\" required variant=\"outlined\" \r\n                onChange={(event) => setName(event.target.value)}/>\r\n                <TextField fullWidth label=\"EMAIL\" id=\"email\" required variant=\"outlined\" \r\n                onChange={(event) => setEmail(event.target.value)}/>\r\n                <TextField label=\"PASSWORD\" required type=\"password\" \r\n                onChange={(event) => setPassword(event.target.value)}/>\r\n                <TextField label=\"CONFIRM PASSWORD\" required type=\"password\"\r\n                onChange={(event) => setConfirmPassword(event.target.value)}/>\r\n                {/* <Terms setTermsValid={setTermsValid}/> */}\r\n            </Stack>\r\n            <Stack sx={{margin: \"20px 0\"}} direction={{xs: \"column\", sm: \"row\"}} spacing={{xs: 1, sm: 2}}>\r\n                <Button variant=\"contained\" type=\"submit\">\r\n                    REGISTER\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" >\r\n                    <Link to={redirect ? `/signin?redirect=${redirect}` : \"/signin\" } className={classes.noneTextDecoration}>\r\n                        SIGN IN\r\n                    </Link>\r\n                </Button>\r\n            </Stack>\r\n        </Box>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}