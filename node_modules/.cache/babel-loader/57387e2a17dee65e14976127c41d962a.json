{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github Repositories\\\\deploy-cyclex\\\\src\\\\components\\\\forms\\\\ForgotForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Box, TextField, Button } from \"@mui/material\"; //redux\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userForgotPassword } from \"../../actions/userActions\"; //react-router\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Form from \"../Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForgotForm() {\n  _s();\n\n  const history = useNavigate();\n  const [email, setEmail] = useState(null);\n  const dispatch = useDispatch();\n  const forgotPassword = useSelector(state => state.forgotPassword);\n  const {\n    error,\n    sentResetLink,\n    isLoading\n  } = forgotPassword;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(userForgotPassword(email));\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history(\"/\");\n    }\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      error: error,\n      isLoading: isLoading,\n      form: true,\n      success: sentResetLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/img/CycleX-Logo.png\",\n        width: \"150px\",\n        style: {\n          margin: \"auto\",\n          display: \"block\"\n        },\n        alt: \"CycleX Logo\",\n        title: \"CycleX - Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      textAlign: \"center\",\n      sx: {\n        padding: \"30px 0px\"\n      },\n      children: \"RESET PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autocomplete: \"off\",\n      onSubmit: event => handleSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          paddingBottom: \"20px\"\n        },\n        label: \"EMAIL\",\n        type: \"email\",\n        variant: \"outlined\",\n        fullWidth: true,\n        required: true,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"RESET PASSWORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForgotForm, \"8jIIA89hLMZGTRxJF22834l4MyU=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = ForgotForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotForm\");","map":{"version":3,"sources":["C:/Github Repositories/deploy-cyclex/src/components/forms/ForgotForm.js"],"names":["React","useEffect","useState","Typography","Box","TextField","Button","useDispatch","useSelector","userForgotPassword","Link","useNavigate","Form","ForgotForm","history","email","setEmail","dispatch","forgotPassword","state","error","sentResetLink","isLoading","userLogin","userInfo","handleSubmit","event","preventDefault","margin","display","padding","paddingBottom","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {  Typography, Box, TextField, Button } from \"@mui/material\";\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userForgotPassword } from \"../../actions/userActions\";\r\n\r\n//react-router\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Form from \"../Form\";\r\n\r\nexport default function ForgotForm(){\r\n    const history = useNavigate();\r\n    const [email, setEmail] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const forgotPassword = useSelector((state) => state.forgotPassword);\r\n    const { error, sentResetLink, isLoading } = forgotPassword;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        dispatch(userForgotPassword(email));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history(\"/\");\r\n        }\r\n    }, [userInfo]);\r\n    \r\n    return(\r\n        <>\r\n           <Form error={error} isLoading={isLoading} form={true} success={sentResetLink}>\r\n           </Form>\r\n            <Link to=\"/\">\r\n                <img src=\"/assets/img/CycleX-Logo.png\" width=\"150px\" style={{margin: \"auto\", display:\"block\"}} alt=\"CycleX Logo\" title=\"CycleX - Home\"/>\r\n            </Link>        \r\n            <Typography variant=\"h3\" textAlign=\"center\" sx={{padding: \"30px 0px\"}}>\r\n            RESET PASSWORD\r\n            </Typography>\r\n            <Box component=\"form\" noValidate autocomplete=\"off\" onSubmit={(event) => handleSubmit(event)}>\r\n                <TextField sx={{paddingBottom: \"20px\"}} label=\"EMAIL\" type=\"email\" variant=\"outlined\" fullWidth required \r\n                onChange={(event) => setEmail(event.target.value)}/>\r\n                <Button type=\"submit\" variant=\"contained\">\r\n                    RESET PASSWORD\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}