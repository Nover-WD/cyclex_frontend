{"ast":null,"code":"import _toConsumableArray from\"C:/Github Repositories/cyclex/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Github Repositories/cyclex/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CART_APPEND_ITEM,CART_REQUEST_SUCCESS,CART_REMOVE_ITEM,REMOVE_ITEMS_SUCCESS}from\"../constants/cartConstants\";export var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{cartItems:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CART_APPEND_ITEM:var newItem=action.payload;//check the id if it have on cartItems state\nvar itemInCart=state.cartItems.find(function(items){return items.item===newItem.item;});/*if the item is already inside the cart\r\n            will update the item info with the new qty that \r\n            was pass from the action.payload \r\n            else will append the new item inside the cart \r\n            items state*/if(itemInCart){return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.map(function(items){return items.item===itemInCart.item?newItem:items;})});}else{return _objectSpread(_objectSpread({},state),{},{cartItems:[].concat(_toConsumableArray(state.cartItems),[newItem])});};case CART_REMOVE_ITEM:return _objectSpread(_objectSpread({},state),{},{//back the items that not equal to the id\ncartItems:state.cartItems.filter(function(items){return items._id!==action.payload;})});case CART_REQUEST_SUCCESS:return{cartItems:action.payload};case REMOVE_ITEMS_SUCCESS:return{cartItems:[]};default:return state;}};","map":{"version":3,"sources":["C:/Github Repositories/cyclex/frontend/src/reducers/cartReducers.js"],"names":["CART_APPEND_ITEM","CART_REQUEST_SUCCESS","CART_REMOVE_ITEM","REMOVE_ITEMS_SUCCESS","cartReducer","state","cartItems","action","type","newItem","payload","itemInCart","find","items","item","map","filter","_id"],"mappings":"yPAAA,OAASA,gBAAT,CAA2BC,oBAA3B,CAAiDC,gBAAjD,CAAmEC,oBAAnE,KAA+F,4BAA/F,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAuC,IAAtCC,CAAAA,KAAsC,2DAA9B,CAAEC,SAAS,CAAE,EAAb,CAA8B,IAAXC,CAAAA,MAAW,2CAC9D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKR,CAAAA,gBAAL,CACI,GAAMS,CAAAA,OAAO,CAAGF,MAAM,CAACG,OAAvB,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CACf,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,GAAeL,OAAO,CAACK,IAAlC,EADe,CAAnB,CAIA;AACZ;AACA;AACA;AACA,yBACY,GAAGH,UAAH,CAAe,CACX,sCACON,KADP,MAEIC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoB,SAACF,KAAD,QAC3BA,CAAAA,KAAK,CAACC,IAAN,GAAeH,UAAU,CAACG,IAA1B,CAAiCL,OAAjC,CAA2CI,KADhB,EAApB,CAFf,GAMH,CAPD,IAOO,CACH,sCACOR,KADP,MAEIC,SAAS,8BAAMD,KAAK,CAACC,SAAZ,GAAuBG,OAAvB,EAFb,GAIH,EAEL,IAAKP,CAAAA,gBAAL,CACI,sCACOG,KADP,MAEI;AACAC,SAAS,CAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuB,SAACH,KAAD,QAC9BA,CAAAA,KAAK,CAACI,GAAN,GAAcV,MAAM,CAACG,OADS,EAAvB,CAHf,GAOJ,IAAKT,CAAAA,oBAAL,CACI,MAAO,CACHK,SAAS,CAAEC,MAAM,CAACG,OADf,CAAP,CAGJ,IAAKP,CAAAA,oBAAL,CACI,MAAO,CACHG,SAAS,CAAG,EADT,CAAP,CAGJ,QACI,MAAOD,CAAAA,KAAP,CA7CR,CA+CH,CAhDM","sourcesContent":["import { CART_APPEND_ITEM, CART_REQUEST_SUCCESS, CART_REMOVE_ITEM, REMOVE_ITEMS_SUCCESS } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch(action.type){\r\n        case CART_APPEND_ITEM:\r\n            const newItem = action.payload;\r\n        \r\n            //check the id if it have on cartItems state\r\n            const itemInCart = state.cartItems.find(\r\n                (items) => items.item === newItem.item \r\n            );\r\n\r\n            /*if the item is already inside the cart\r\n            will update the item info with the new qty that \r\n            was pass from the action.payload \r\n            else will append the new item inside the cart \r\n            items state*/\r\n            if(itemInCart) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((items) => \r\n                        items.item === itemInCart.item ? newItem : items\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, newItem],\r\n                }\r\n            };\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                //back the items that not equal to the id\r\n                cartItems: state.cartItems.filter((items) => \r\n                    items._id !== action.payload\r\n                )\r\n            };\r\n        case CART_REQUEST_SUCCESS:\r\n            return {\r\n                cartItems: action.payload\r\n            };\r\n        case REMOVE_ITEMS_SUCCESS:\r\n            return {\r\n                cartItems : []\r\n            };\r\n        default: \r\n            return state;\r\n        }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}