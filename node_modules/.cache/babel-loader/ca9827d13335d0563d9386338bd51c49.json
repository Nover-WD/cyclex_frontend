{"ast":null,"code":"import _regeneratorRuntime from\"C:/Github Repositories/deploy_cyclex/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Github Repositories/deploy_cyclex/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{ITEM_LIST_REQUEST,ITEM_LIST_SUCCESS,ITEM_LIST_FAIL,ITEM_DETAIL_REQUEST,ITEM_DETAIL_SUCESS,ITEM_DETAIL_FAIL}from\"../constants/itemConstants.js\";import{ITEM_API_URL}from\"../constants/apiConstants\";import axios from\"axios\";export var listItems=function listItems(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;//this is for logging purposes to let us know when debugging our code that we are about to start requesting the Item List from the backend\ndispatch({type:ITEM_LIST_REQUEST});//get the item list from the backend(api call)\n_context.next=4;return axios({method:\"get\",baseURL:ITEM_API_URL,url:\"/\"});case 4:_yield$axios=_context.sent;data=_yield$axios.data;dispatch({type:ITEM_LIST_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:ITEM_LIST_FAIL,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var listItemDetail=function listItemDetail(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$axios2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:ITEM_DETAIL_REQUEST});//get the data from backend(api call)\n_context2.next=4;return axios({method:\"get\",baseURL:ITEM_API_URL,url:\"/\".concat(id)//get the id from url route params\n});case 4:_yield$axios2=_context2.sent;data=_yield$axios2.data;//pass the data and pass to reducer\ndispatch({type:ITEM_DETAIL_SUCESS,payload:data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:ITEM_DETAIL_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Github Repositories/deploy_cyclex/client/src/actions/itemActions.js"],"names":["ITEM_LIST_REQUEST","ITEM_LIST_SUCCESS","ITEM_LIST_FAIL","ITEM_DETAIL_REQUEST","ITEM_DETAIL_SUCESS","ITEM_DETAIL_FAIL","ITEM_API_URL","axios","listItems","dispatch","type","method","baseURL","url","data","payload","response","message","listItemDetail","id"],"mappings":"yPAAA,OACIA,iBADJ,CAEIC,iBAFJ,CAGIC,cAHJ,CAIIC,mBAJJ,CAKIC,kBALJ,CAMIC,gBANJ,KAOO,+BAPP,CAQA,OAASC,YAAT,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,kGAAM,iBAAMC,QAAN,wJAEvB;AACAA,QAAQ,CAAC,CAAEC,IAAI,CAAEV,iBAAR,CAAD,CAAR,CAEA;AALuB,sBAMFO,CAAAA,KAAK,CAAC,CACvBI,MAAM,CAAE,KADe,CAEvBC,OAAO,CAAEN,YAFc,CAGvBO,GAAG,CAAE,GAHkB,CAAD,CANH,mCAMhBC,IANgB,cAMhBA,IANgB,CAYvBL,QAAQ,CAAC,CACLC,IAAI,CAAET,iBADD,CAELc,OAAO,CAAED,IAFJ,CAAD,CAAR,CAZuB,+EAkBvBL,QAAQ,CAAC,CACLC,IAAI,CAAER,cADD,CAELa,OAAO,CACH,YAAMC,QAAN,EAAkB,YAAMA,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,CACE,YAAMD,QAAN,CAAeF,IAAf,CAAoBG,OADtB,CACgC,YAAMA,OAJrC,CAAD,CAAR,CAlBuB,oEAAN,gEAAlB,CA2BP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,kGAAQ,kBAAMV,QAAN,8JAE9BA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,mBAAR,CAAD,CAAR,CAEA;AAJ8B,uBAKTI,CAAAA,KAAK,CAAC,CACvBI,MAAM,CAAE,KADe,CAEvBC,OAAO,CAAEN,YAFc,CAGvBO,GAAG,YAAMM,EAAN,CAAW;AAHS,CAAD,CALI,qCAKvBL,IALuB,eAKvBA,IALuB,CAW9B;AACAL,QAAQ,CAAC,CACLC,IAAI,CAAEN,kBADD,CAELW,OAAO,CAAED,IAFJ,CAAD,CAAR,CAZ8B,mFAkB9BL,QAAQ,CAAC,CACLC,IAAI,CAAEL,gBADD,CAELU,OAAO,CACH,aAAMC,QAAN,EAAkB,aAAMA,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,CACE,aAAMD,QAAN,CAAeF,IAAf,CAAoBG,OADtB,CACgC,aAAMA,OAJrC,CAAD,CAAR,CAlB8B,sEAAR,kEAAvB","sourcesContent":["import {\r\n    ITEM_LIST_REQUEST,\r\n    ITEM_LIST_SUCCESS,\r\n    ITEM_LIST_FAIL,\r\n    ITEM_DETAIL_REQUEST,\r\n    ITEM_DETAIL_SUCESS,\r\n    ITEM_DETAIL_FAIL\r\n} from \"../constants/itemConstants.js\";\r\nimport { ITEM_API_URL } from \"../constants/apiConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listItems = () => async(dispatch) => {\r\n    try {\r\n        //this is for logging purposes to let us know when debugging our code that we are about to start requesting the Item List from the backend\r\n        dispatch({ type: ITEM_LIST_REQUEST });\r\n\r\n        //get the item list from the backend(api call)\r\n        const {data} = await axios({\r\n            method: \"get\",\r\n            baseURL: ITEM_API_URL,\r\n            url: \"/\"\r\n        });\r\n\r\n        dispatch({\r\n            type: ITEM_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } \r\n    catch (error) {\r\n        dispatch({\r\n            type: ITEM_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listItemDetail = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: ITEM_DETAIL_REQUEST});\r\n        \r\n        //get the data from backend(api call)\r\n        const {data} = await axios({\r\n            method: \"get\",\r\n            baseURL: ITEM_API_URL,\r\n            url: `/${id}` //get the id from url route params\r\n        });\r\n\r\n        //pass the data and pass to reducer\r\n        dispatch({\r\n            type: ITEM_DETAIL_SUCESS, \r\n            payload: data\r\n        })\r\n    } \r\n    catch (error) {\r\n        dispatch({\r\n            type: ITEM_DETAIL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}