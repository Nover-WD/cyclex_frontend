{"ast":null,"code":"import { ITEM_LIST_REQUEST, ITEM_LIST_SUCCESS, ITEM_LIST_FAIL, ITEM_DETAIL_REQUEST, ITEM_DETAIL_SUCESS, ITEM_DETAIL_FAIL } from \"../constants/itemConstants.js\";\nimport { ITEM_API_URL } from \"../constants/apiConstants\";\nimport axios from \"axios\";\nconst url = \"https://cyclexbackend.adaptable.app/\";\nexport const listItems = () => async dispatch => {\n  try {\n    //this is for logging purposes to let us know when debugging our code that we are about to start requesting the Item List from the backend\n    dispatch({\n      type: ITEM_LIST_REQUEST\n    }); //get the item list from the backend(api call)\n\n    const {\n      data\n    } = await axios({\n      method: \"get\",\n      baseURL: url + ITEM_API_URL\n    });\n    dispatch({\n      type: ITEM_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ITEM_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listItemDetail = id => async dispatch => {\n  try {\n    dispatch({\n      type: ITEM_DETAIL_REQUEST\n    }); //get the data from backend(api call)\n\n    const {\n      data\n    } = await axios({\n      method: \"get\",\n      baseURL: ITEM_API_URL,\n      url: `/${id}` //get the id from url route params\n\n    }); //pass the data and pass to reducer\n\n    dispatch({\n      type: ITEM_DETAIL_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ITEM_DETAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Github Repositories/deploy-cyclex/src/actions/itemActions.js"],"names":["ITEM_LIST_REQUEST","ITEM_LIST_SUCCESS","ITEM_LIST_FAIL","ITEM_DETAIL_REQUEST","ITEM_DETAIL_SUCESS","ITEM_DETAIL_FAIL","ITEM_API_URL","axios","url","listItems","dispatch","type","data","method","baseURL","payload","error","response","message","listItemDetail","id"],"mappings":"AAAA,SACIA,iBADJ,EAEIC,iBAFJ,EAGIC,cAHJ,EAIIC,mBAJJ,EAKIC,kBALJ,EAMIC,gBANJ,QAOO,+BAPP;AAQA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,sCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAC9C,MAAI;AACA;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR,CAFA,CAIA;;AACA,UAAM;AAACY,MAAAA;AAAD,QAAS,MAAML,KAAK,CAAC;AACvBM,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,OAAO,EAAEN,GAAG,GAAGF;AAFQ,KAAD,CAA1B;AAKAI,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,iBADD;AAELc,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAdD,CAeA,OAAOI,KAAP,EAAc;AACVN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,cADD;AAELa,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACEF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADtB,GACgCF,KAAK,CAACE;AAJrC,KAAD,CAAR;AAMH;AACJ,CAxBM;AA0BP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAmB;AACrD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR,CADA,CAGA;;AACA,UAAM;AAACS,MAAAA;AAAD,QAAS,MAAML,KAAK,CAAC;AACvBM,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,OAAO,EAAER,YAFc;AAGvBE,MAAAA,GAAG,EAAG,IAAGY,EAAG,EAHW,CAGT;;AAHS,KAAD,CAA1B,CAJA,CAUA;;AACAV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,kBADD;AAELW,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAfD,CAgBA,OAAOI,KAAP,EAAc;AACVN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,gBADD;AAELU,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACEF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADtB,GACgCF,KAAK,CAACE;AAJrC,KAAD,CAAR;AAMH;AACJ,CAzBM","sourcesContent":["import {\r\n    ITEM_LIST_REQUEST,\r\n    ITEM_LIST_SUCCESS,\r\n    ITEM_LIST_FAIL,\r\n    ITEM_DETAIL_REQUEST,\r\n    ITEM_DETAIL_SUCESS,\r\n    ITEM_DETAIL_FAIL\r\n} from \"../constants/itemConstants.js\";\r\nimport { ITEM_API_URL } from \"../constants/apiConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://cyclexbackend.adaptable.app/\";\r\n\r\nexport const listItems = () => async(dispatch) => {\r\n    try {\r\n        //this is for logging purposes to let us know when debugging our code that we are about to start requesting the Item List from the backend\r\n        dispatch({ type: ITEM_LIST_REQUEST });\r\n\r\n        //get the item list from the backend(api call)\r\n        const {data} = await axios({\r\n            method: \"get\",\r\n            baseURL: url + ITEM_API_URL,\r\n        });\r\n\r\n        dispatch({\r\n            type: ITEM_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } \r\n    catch (error) {\r\n        dispatch({\r\n            type: ITEM_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const listItemDetail = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: ITEM_DETAIL_REQUEST});\r\n        \r\n        //get the data from backend(api call)\r\n        const {data} = await axios({\r\n            method: \"get\",\r\n            baseURL: ITEM_API_URL,\r\n            url: `/${id}` //get the id from url route params\r\n        });\r\n\r\n        //pass the data and pass to reducer\r\n        dispatch({\r\n            type: ITEM_DETAIL_SUCESS, \r\n            payload: data\r\n        })\r\n    } \r\n    catch (error) {\r\n        dispatch({\r\n            type: ITEM_DETAIL_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}